<?xml version="1.0" ?>
<launch>

  <arg name="sim" default="true" />
  <arg name="robot_ip" unless="$(arg sim)" />

  <!-- By default, we do not start a database (it can be large) -->
  <arg name="db" default="false" />

  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find hilgendorf_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

  <!-- If needed, broadcast static tf for robot root -->

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <!-- <include file="$(find hilgendorf_moveit_config)/launch/move_group.launch"> -->
  <!--   <arg name="allow_trajectory_execution" value="true"/>   -->
  <!--   <arg name="fake_execution" value="false"/> -->
  <!--   <arg name="info" value="true"/> -->
  <!--   <arg name="debug" value="$(arg debug)"/> -->
  <!-- </include> -->

  <!-- run the robot simulator and action interface nodes -->
  <group ns="left">
    <rosparam param="controller_joint_names">
      ['left_shoulder_pan_joint',
      'left_shoulder_lift_joint',
      'left_elbow_joint',
      'left_wrist_1_joint',
      'left_wrist_2_joint',
      'left_wrist_3_joint']
    </rosparam>
    <include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch">
    </include>
  </group>

  <group ns="right">
    <rosparam param="controller_joint_names">
      ['right_shoulder_pan_joint',
      'right_shoulder_lift_joint',
      'right_elbow_joint',
      'right_wrist_1_joint',
      'right_wrist_2_joint',
      'right_wrist_3_joint']
    </rosparam>
    <include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch">
    </include>
  </group>

  <node name="combined_joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
    <rosparam param="source_list">[left/joint_states, right/joint_states]</rosparam>
  </node>

  <!-- rviz -->
  <node name="rviz" type="rviz" pkg="rviz" args="-d $(find plan_and_run)/config/demo_config.rviz" required="true"/>


</launch>
